<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_link_forwardi</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>directions = 2;
image_speed = .3;

upkey = vk_up;
downkey = vk_down;
leftkey = vk_left;
rightkey = vk_right;
gokey = vk_enter;
go = 0;
pressed = 0;
scores = 0;
image_xscale = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_released(gokey) and pressed = 1{
    go = 1;
    pressed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(gokey) and pressed = 0{
    go = 1;
    pressed = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for movement
if keyboard_check(upkey){
    if go = 1 and directions != 3{
        sprite_index = spr_link_up;
        directions = 3;
    }
    if go = 0 and directions != 3{
        sprite_index = spr_link_upi;
        directions = 3;
    }
}else if keyboard_check(downkey) {
    if go = 1 and directions != 1{
        sprite_index = spr_link_down;
        directions = 1;
    }
    if go = 0 and directions != 1{
        sprite_index = spr_link_downi;
        directions = 1;
    }
}else if keyboard_check(leftkey) {
    if go = 1 and directions != 2{
        sprite_index = spr_link_forward;
        directions = 2;
        image_xscale = -1;
    }
    if go = 0 and directions != 2{
        sprite_index = spr_link_forwardi;
        directions = 2;
        image_xscale = -1;
    }
}else if keyboard_check(rightkey) {
    if go = 1 and directions != 0{
        sprite_index = spr_link_forward;
        directions = 0;
        image_xscale = 1;
    }
    if go = 0 and directions != 0{
        sprite_index = spr_link_forwardi;
        directions = 0;
        image_xscale = 1;
    }
}
if go = 0 and image_number &gt; 1 {
    if directions == 0{
        sprite_index = spr_link_forwardi;
        image_xscale = 1;
    }
        if directions == 2{
        sprite_index = spr_link_forwardi;
        image_xscale = -1;
    }
        if directions == 1{
        sprite_index = spr_link_downi;
    }
        if directions == 3{
        sprite_index = spr_link_upi;

    }
}

if go = 1{
    if image_number == 1 {
        if directions == 0{
            sprite_index = spr_link_forward;
            image_xscale = 1;
            x = x + 4
        }
        if directions == 2{
            sprite_index = spr_link_forward;
            image_xscale = -1;
            x = x - 4
        }
        if directions == 1{
            sprite_index = spr_link_down;
            y = y + 4
        }
        if directions == 3{
            sprite_index = spr_link_up;
            y = y - 4
        }
   }else{
        if directions == 0{
            x = x + 4
        }
        if directions == 2{
            x = x - 4
        }
        if directions == 1{
            y = y + 4
        }   
        if directions == 3{
            y = y - 4
        }
   }
}
go = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>112</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_wrap</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if directions == 2{
    draw_sprite_ext(sprite_index,image_index,x,y,-1,1,0,c_white,1);
    draw_sprite_ext(sprite_index,image_index,x,y,-1,1,0,c_blue,.5);
} else {
    draw_sprite(sprite_index,image_index,x,y);
    draw_sprite_ext(sprite_index,image_index,x,y,1,1,0,c_blue,.5);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
